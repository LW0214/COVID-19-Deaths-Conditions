---
editor:
  markdown:
    wrap: 72
    code-fold: true
---

# Data

## Technical description

### Data Source and Collection Conditions

1.  Contributing to COVID-19 Deaths, by State and Age, Provisional
    2020-2023

    The main dataset for this project is collected and managed by the
    NCHS as part of the National Vital Statistics System (NVSS). The
    NVSS compiles official death certificate data from various
    jurisdictions, including the 50 states, the District of Columbia,
    New York City, and 5 US territories. Death certificates, completed
    by funeral directors and certifiers, provide both demographic and
    death-related information, which is then coded using the
    International Classification of Diseases, Tenth Revision (ICD-10).
    COVID-19 deaths are specifically coded under ICD-10 code U071.

    Source: [Conditions Contributing to COVID-19 Deaths, by State and
    Age, Provisional
    2020-2023](https://data.cdc.gov/NCHS/Conditions-Contributing-to-COVID-19-Deaths-by-Stat/hk9y-quqm)

2.  Single-Race Population Estimates 2020-2022 by State and Single-Year
    Age

    To further our analysis, we will also be utilizing US population
    data obtained from CDC Wonder. CDC provides annual estimates of the
    population for each state in the United States, including
    demographic breakdowns by age. The CDC obtains population data by
    integrating various data sources and applying advanced statistical
    methodologies. The primary foundation is decennial census data,
    which offers a comprehensive snapshot of the US population. However,
    given the ten-year interval between censuses, the CDC supplements
    this with other data sources to capture more current population
    dynamics.

    Source: [Single-Race Population
    Estimates](https://wonder.cdc.gov/single-race-population.html)

### Data Format and Dimensions

The main dataset, last updated on September 27, 2023, contains
approximately 621K rows, 14 columns. Each row details a COVID-19 death,
categorized by age group, condition, jurisdiction, year and month. The
dataset includes the following columns: "Date as of", "Start Date", "End
Date", "Group", "Year", "Month", "State", "Condition Group",
"Condition", "ICD10_codes", "Age Group", "COVID-19 Deaths", "Number of
Mentions" and "Flag".

### Breakdown of columns

1.  Types in each column

    Most columns are categorical data, and the column "COVID.19.Deaths"
    are numerical data. The first 3 columns "Data.As.Of", "Start.Date"
    and "End.Date" are timestamps.

2.  Time-related columns

    Column "Year" and "Month" that indicates said time periods of death
    recorded, thus, the smallest granularity of time interval is month.
    "Group" column indicates by what time interval the deaths are
    recorded, whose values can be "by Total", "by Month" and "by Year".
    If an entry has Group=by Year and Year=2020, then its death count is
    the sum of all entries' death count where Year=2020 and Group=by
    Month. Similarly, if an entry has Group=by total, then its death
    count is the sum over the entire period of the whole dataset.

    The first column "Data As Of" can be dropped as all of them are
    "9/24/2023" which probably indicates the last date where any records
    are added to the database, especially since the last date in
    "End.Date" is "09/23/2023". The other columns "Start.Date" and
    "End.Date" corresponds to "Group", "Year" and "Month". For example
    if group=by year, year=2020, then start.date=01/01/2020 and
    end.Date=12/31/2020. Thus, we decide that "Data As Of", "Start.Date"
    and "End.Date" aren't that useful as their information is already
    captured in more precise columns of "Group", "Year" and "Month".

3.  Geography-related columns

    "State" column indicates the geographical states of each record.
    Some has values "United States" which is already a sum of other
    states.

4.  Medical conditions columns

    The columns "Condition groups", "Conditions", and "ICD10_codes" are
    categories and subcategories describing the contributors to death by
    COVID-19. There's a condition named "COVID-19" which we believe
    indicates the actual COVID-19 deaths as indicated by the name of the
    data source.

5.  Age-related column

    There is one age-related column called the "Age Group". There's a
    value "All Ages" which is a sum of the other age groups.

6.  Death-related columns

    There are two death-related columns, "COVID-19 Deaths" and "Number
    of Mentions". There's little documentation about the difference
    between them, upon further research, we assume "Number of Mentions"
    may be the number of times a condition is mentioned on the death
    certificate, while "COVID-19 Deaths" is the number of times a
    condition is recorded as a contributor of death by the hospital.

7.  "Flag" column

    Has a value if the number of deaths is \<10. For said entries,
    "COVID-19 Deaths" and "Number of Mentions" are already suppressed to
    NAN values to be in accordance with NCHS confidentiality standards.

### Frequency of Updates

Data is created on 5/8/2022. Data is last updated by 9/27/2023, and this
is the only update to the dataset. The dataset will no longer be
updated. It's also stated that data for 2022 and 2023 are provisional,
while "Estimates for 2020 and 2021 are based on final data.".

### Import

We imported the data by downloading its csv format and importing it to
R.

### Issues

1.  Double Counting of Deaths by Conditions

    Death for different conditions can be double counted, for example, a
    person died from COVID may have both diabetes and obesity at their
    time of death, as the source notes that "​​To avoid counting the same
    death multiple times, the numbers for different conditions should
    not be summed."

2.  Delay or Incomplete Data

    The sources notes "2022 and 2023 data are provisional. Estimates for
    2020 and 2021 are based on final data." as record reporting for
    recent years of 2022 and 2923 may be "affected or delayed by
    COVID-19 related response activities." So we will use 2020 and 2021
    data for our analysis as these are up-to-date.

3.  Discrepancy Between COVID 19 Deaths vs Mentions for Conditions Other
    Than COVID-19

    There's another numerical column named "Mentions". For conditions of
    "COVID-19", "number of deaths" is equal to "number of mentions",
    which makes sense. Yet for almost all other conditions, their
    "number of mentions" is almost always larger than "number of
    deaths". We suspect it's because if a person passed away due to
    COVID-19, but had a history of diabetes, their relatives may still
    put it as on his death certificate despite the hospital never
    diagnosed it as a contributor of death. For our research, we will
    use "COVID 19 Deaths" rather than mentions since if it's produced by
    the hospital, it may be more authoritative and accurate.

## Research plan

1.  Trends Over Time

    Assess how the mortality rates and associated conditions have
    changed over time from 2020 to 2023. This can provide insights into
    the evolving nature of the pandemic and its impact on public health.

    Methodology: Time series analysis can be used to track the evolution
    of the pandemic. For example, identifying peaks in mortality rates
    and changes in prevalence of comorbidity over time.

2.  Geographical Variation

    Examine the differences in COVID-19 mortality rates and associated
    health conditions across different states. This could reveal how
    geographic factors, healthcare infrastructure, or policies might
    influence COVID-19 outcomes.

    Methodology: When analyzing geographical variations, we will only be
    using data in years 2020-2021 (estimates for this year are based on
    final data) as 2022 and 2023 data are provisional. We will do this
    by aggregating the death counts by state for the years 2020-2021 to
    reduce noise from short term fluctuations due to differences in
    reporting. Some states report deaths on a daily basis, while other
    states report deaths weekly or monthly. We will also normalize the
    death counts to account for population differences between states.

3.  Age-Related Vulnerability

    Analyze how age groups differ in their vulnerability to COVID-19,
    considering the number of deaths and associated health conditions.

    Methodology: Conduct age-wise comparison to see how mortality rates
    differ across age groups. Descriptive statistics (like mean, median)
    and graphical representations would be useful here. We also plan to
    analyze the frequency and type of comorbidities in each age group.

4.  Impact of Specific Health Conditions on COVID-19 Mortality Rates

    Investigate how certain pre-existing conditions (like respiratory
    diseases, cardiovascular diseases, diabetes, etc.) affect the
    mortality rates among COVID-19 patients.

    How: Analyze 'COVID-19 Deaths' in relation to 'Conditions' and to
    identify which pre-existing conditions have higher mortality rates
    within COVID-19 patients. We can use correlation analysis to
    understand the relationship between specific health conditions and
    mortality rates.

## Data Preprocessing

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(ggplot2)

covid_data=read.csv("data/raw/Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023.csv")

# if group is total, fill all year and month by -1

#when group = by total, replace all year and month by -1
new_covid=covid_data %>% mutate(Year = ifelse(Group == "By Total", -1, Year))
new_covid=new_covid %>% mutate(Month = ifelse(Group == "By Total", -1, Month))

# when group = by year, replace all month by -1
new_covid=new_covid %>% mutate(Month = ifelse(Group == "By Year", -1, Month))
```

### Missing value analysis

```{r message=FALSE, warning=FALSE}
# count nans
nan_cols=colMeans(is.na(new_covid))
nan_cols=data.frame(nan_cols)
nan_cols <- cbind(newColName = rownames(nan_cols), nan_cols)
rownames(nan_cols) <- 1:nrow(nan_cols)

#plot nans
plot <- ggplot(data.frame(nan_cols),
               aes(x=fct_reorder(newColName,-nan_cols),
                   y=nan_cols)) +
  geom_bar(stat="identity") +
  geom_bar(stat = "identity") +
  ggtitle("NaN Percentage of All Columns") +
  theme(axis.text.x = element_text(angle = 90,
                                   vjust = 0.5,
                                   hjust=1)) +
  labs(y= "NaN percentage",
       x = "columns")
plot
```

Under the column "Age Group", there's a value "Not stated" that covers
10% of the entire dataset, which isn't much, and can be deleted.

```{r include=FALSE}
# imputation for age group: not stated, delete
new_covid=new_covid[!(new_covid$Age.Group %in% "Not stated"),]
# sanity check if not stated is there
#new_covid$ Age.Group |> unique()
```

As mentioned earlier, "COVID-19 Deaths"and "Number of Mentions"are
already suppressed to NAN values if the number of deaths is \<10 and the
"Flag" column is indicated for such entries. Such entries occupy 30% of
the dataset, which is quite large. As shown in the below code for
Alaska, apparently "all ages" already calculates the suppressed counts
in age group, though if a state or condition has more than 1 age groups
that are both suppressed, there's no way for us to know for sure how
many values are there in each of the age group. Still, we decide to
impute the entries for "COVID-19 Deaths"and "Number of Mentions" as the
average between 0 to 10, which is 5. The only time there'll be large
over- or under-estimation with imputation of death count is when we want
to query by each state by each condition, and by each year, but none of
our analysis includes such a precise query.In our analysis, we either
query across all age groups, all COVID death conditions for each state;
or we query across each age group, each condition but across all of US,
or across all age groups, all of US and by each condition, so the number
of total deaths will be quite large for a value of hundreds to
thousands. And in this case, an 5 is relatively small in comparison.

```{r include=FALSE}
# want to check how death for age.group= all_ages are calculated, especially if there're age groups with suppressed (nan) deaths 

## check which state has suppressed deaths for covid-19
#subset(new_covid,is.na(COVID.19.Deaths)) |> filter(Condition.Group=="COVID-19" & Age.Group!="Not stated")

# one of the above results shows Alaska
subset(new_covid,Year==2020 & Group=="By Year" & State=="Alaska" & Condition.Group=="COVID-19" )

# Alaska: sum of deaths for un-suppressed age groups: 249, sum of deaths of age.group=all_ages: 253, 2 age groups suppressed

```

Since we don't use "Number of Mentions" column in our analysis, we only
impute for covid death.

```{r message=FALSE, warning=FALSE}
# impute: when flag for an age group is not "", impute COVID.19.Deaths with 5
# # sanity check: the flag should all be "one or more..."
# new_covid$Flag[is.na(new_covid$COVID.19.Deaths)] |> unique()
# impute with 5
new_covid$COVID.19.Deaths[is.na(new_covid$COVID.19.Deaths)] <- 5

# # saniry check: if these are all 5
# new_covid$COVID.19.Deaths[which(new_covid[,"Flag"] != '')] |> unique()
```

At first glance, if an entry's column "Group" has values "By Total", its
"Year" and "Month" are both missing, because of course that row is an
aggregation of all past data. Similarly, if an entry's column "Group"
has values "By Year", its "Month" values are missing, because that row
is an aggregation of all months in that year. After replacing these
implicit missing values in these rows with a dummy value "-1", it
appears that there are no actual NaN values in these columns anymore. 

We export the preprocessed dataset for COVID.

```{r message=FALSE, warning=FALSE}
write.csv(new_covid, "data/clean/preproc_covid.csv", row.names=FALSE)
```

### Preprocessing COVID dataset to be joined with population dataset.

```{r message=FALSE, warning=FALSE}
# delete useless columns
df <- subset(new_covid, select = -c(Data.As.Of,Start.Date,End.Date
))
df = df |> subset(Group=="By Year")

df = df |> subset(Year %in% c(2020,2021))

row.names(df) <- NULL

# export
write.csv(df, "data/preprocess/year_covid_20_21.csv", row.names=FALSE)
# # sanity check:
# read_csv("data/preprocess/year_covid_20_21.csv")
```

### Code and Documentation for merging COVID conditions dataset with population dataset

It's worth noting that the annual population estimate is taken as of
July each year, while we decide to use our annual COVID data as starting
from January to December each year due to the limited amount of
fully-updated data available. However, the discrepancy in the start and
end months of these intervals won't have much impact since the overall
population of a state will not fluctuate by a really large amount across
months, especially when both intervals are annual nonetheless. Thus, we
believe we can simply join the population estimates with the COVID data
for each state.

```{r message=FALSE, warning=FALSE}
library(dplyr)
library(readr)

population_data <- read_csv("data/clean/Single-Race Population Estimates 2020-2022 by State and Single-Year Age.csv")

# Modifying 'Single-Year Ages Code' column:
# If 'Single-Year Ages Code' is "85+", replace it with "85", otherwise keep it as is.
population_data <- population_data %>%
  mutate(`Single-Year Ages Code` = if_else(`Single-Year Ages Code` == "85+", "85", `Single-Year Ages Code`))

# Rename the 'Single-Year Ages Code' column to 'Age' for clarity
population_data_formatted <- population_data %>%
  rename(Age = `Single-Year Ages Code`) %>%
  mutate(
    # Convert the Age column to integer type
    Age = as.integer(Age),
    # Categorize ages into groups based on age ranges
    AgeGroup = case_when(
      Age <= 24 ~ "0-24",
      between(Age, 25, 34) ~ "25-34",
      between(Age, 35, 44) ~ "35-44",
      between(Age, 45, 54) ~ "45-54",
      between(Age, 55, 64) ~ "55-64",
      between(Age, 65, 74) ~ "65-74",
      between(Age, 75, 84) ~ "75-84",
      Age >= 85 ~ "85+",
      TRUE ~ NA_character_ # Assign NA to rows not fitting any category
    )
  ) %>%
  # Rename 'Age' back to 'Single-Year Ages Code'
  rename(`Single-Year Ages Code` = Age)

# Aggregate data across all states for 'United States'
us_data <- population_data_formatted %>%
  filter(!is.na(`Yearly July 1st Estimates`)) %>%
  group_by(`Yearly July 1st Estimates`, AgeGroup) %>%
  summarise(TotalPopulation = sum(Population, na.rm = TRUE)) %>%
  ungroup()

# Format US data and add State column
us_data_formatted <- us_data %>%
  mutate(States = "United States")

# Group population data for each state by age group
population_data_grouped <- population_data_formatted %>%
  filter(!is.na(`Yearly July 1st Estimates`)) %>%
  group_by(`Yearly July 1st Estimates`, AgeGroup, States) %>%
  summarise(TotalPopulation = sum(Population, na.rm = TRUE)) %>%
  ungroup()

# Combine US data with data for individual states
all_data <- rbind(us_data_formatted, population_data_grouped)

# Select and rename relevant columns for the final data
all_data_population <- all_data %>%
  rename(Age.Group=AgeGroup, State=States, Year=`Yearly July 1st Estimates`)

covid_yearly_data <- read_csv("data/preprocess/year_covid_20_21.csv")

# Merge the population data with the COVID data
# Using a left join to keep all rows from 'covid_yearly_data'
# and matching rows from 'all_data_population'
covid_with_population <- left_join(
  covid_yearly_data,
  all_data_population,
  by = c("Age.Group", "State", "Year"))

write_csv(covid_with_population,"data/preprocess/covid_with_population.csv")
```
